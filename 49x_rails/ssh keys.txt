ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAvuGTy/A8JfMTsgMw4K0Al6LSQbx0lZczODooMr4ip6HyIkOjmYCyfPC0RkYJY3rQgebKkAei175E8vO/g8EZrONhiNrebbXVBfc1/glxQNn+X39xWT+hZuJR4w5r5F3YaXFVPyuag8/NIKPO0jHmHQx3E307H8rBPtnti5wLMtx7j5OTZ4yWeKgolk5VrrKIhsdu4TsYhW9A0IxzhzFLbM6PhQB4R/jaV8+TJtjYHT9vcdQq7VIAWJw77iR8eiwreOTPCYFmQ86Vhyd3/HSD5tLJwtT3Ac+6deBeubZCjuf7ECrxeP/8xtyxTT3cVOgo9/QvkneQ/nyEd5Bhk249bQ== Ruoran ruoran.lu@hotmail.com

git clone git://github.com/lurr25125/sample_app.git
https://help.github.com/articles/generating-ssh-keys


    1. Clone your app from Github on all your computers.
    2. Use ONE computer to git push heroku.
    3. All other computers add Heroku as a remote.

So do this to all your computers where you want heroku commands:

git remote add heroku git@heroku.com:project.git

And the you can push to both Git and Heroku at the same time with these configurations:

git remote add all github:path/proj.git
git remote set-url --add --push all url = heroku:path/proj.git

Then git push heroku will push to all.

rails generate migration add_password_digest_to_users password_digest:string

db/migrate/[ts]_add_password_digest_to_users.rb
class AddPasswordDigestToUsers < ActiveRecord::Migration
  def change
    add_column :users, :password_digest, :string
  end
end

    add_foreign_key(:rules, :departments, column: 'dept_id')



    sqlite3 db/development.sqlite3 

Once you¡¯ve started sqlite3 with the proper database, you probably know what to do:

    sqlite> drop table table_name;

    sqlite> .quit

  def timeCheck
    time1 = Time.new
    time2 = "Current Time : " + time1.inspect
	
	uri = URI.parse("http://localhost:8081/AlgorithmServer/AlgorithmServlet")
	
	file = "C:\\Downloads\\textfile.txt"
	fileTable = "C:\\Downloads\\sampleTimeTable.csv"
	fileUser = "C:\\Downloads\\sampleUser.csv"
	fileRest = "C:\\Downloads\\sampleUserRestrictions.csv"
	filePool = "C:\\Downloads\\sampleStaffPool.csv"
	
	post_body = []
	post_body << File.read(fileUser)
	post_body << File.read(fileRest)
	post_body << File.read(filePool)
	post_body << File.read(fileTable)

	http = Net::HTTP.new(uri.host, uri.port)
	request = Net::HTTP::Post.new(uri.request_uri)
	request.body = post_body.join

	response = http.request(request)
	session[:json] = "Algorithm is busy at work"
	session[:json] = response.body
	return session[:json]
  end 